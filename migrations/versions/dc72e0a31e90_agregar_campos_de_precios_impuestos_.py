"""Agregar campos de precios, impuestos, promociones e imágenes a Product

Revision ID: dc72e0a31e90
Revises: 
Create Date: 2025-10-03 08:27:39.907688

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dc72e0a31e90'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product', schema=None) as batch_op:
        # Nuevas columnas: todas con server_default para evitar errores en tablas con datos existentes
        batch_op.add_column(sa.Column('base_price', sa.Numeric(precision=10, scale=2), nullable=False, server_default='0.00'))
        batch_op.add_column(sa.Column('tax_rate', sa.Numeric(precision=5, scale=2), nullable=False, server_default='0.00'))
        batch_op.add_column(sa.Column('has_tax_included', sa.Boolean(), nullable=False, server_default='false'))
        batch_op.add_column(sa.Column('is_on_promotion', sa.Boolean(), nullable=False, server_default='false'))
        batch_op.add_column(sa.Column('promotion_discount', sa.Numeric(precision=5, scale=2), nullable=False, server_default='0.00'))
        batch_op.add_column(sa.Column('promotion_end_date', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('image_urls', sa.JSON(), nullable=False, server_default='[]'))
        batch_op.add_column(sa.Column('category_id', sa.Integer(), nullable=True))
        
        # Asegurar que columnas existentes mantengan su comportamiento (sin romper)
        batch_op.alter_column('is_service',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('stock',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('is_visible',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
        batch_op.alter_column('hide_if_out_of_stock',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)

        # Relación con categoría
        batch_op.create_foreign_key('fk_product_category', 'product_category', ['category_id'], ['id'])
        
        # Eliminar columnas antiguas
        batch_op.drop_column('category')
        batch_op.drop_column('price')
        batch_op.drop_column('attributes')

    with op.batch_alter_table('users', schema=None) as batch_op:
        # Nuevo campo: tienda activa por defecto
        batch_op.add_column(sa.Column('store_enabled', sa.Boolean(), nullable=False, server_default='true'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('store_enabled')

    with op.batch_alter_table('product', schema=None) as batch_op:
        # Restaurar columnas antiguas
        batch_op.add_column(sa.Column('attributes', postgresql.JSON(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False))
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        
        # Eliminar FK y columnas nuevas
        batch_op.drop_constraint('fk_product_category', type_='foreignkey')
        batch_op.drop_column('category_id')
        batch_op.drop_column('image_urls')
        batch_op.drop_column('promotion_end_date')
        batch_op.drop_column('promotion_discount')
        batch_op.drop_column('is_on_promotion')
        batch_op.drop_column('has_tax_included')
        batch_op.drop_column('tax_rate')
        batch_op.drop_column('base_price')

        # Restaurar comportamiento original de columnas existentes
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('hide_if_out_of_stock',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('is_visible',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('stock',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('is_service',
               existing_type=sa.BOOLEAN(),
               nullable=False)

    # ### end Alembic commands ###