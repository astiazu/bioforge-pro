@routes.route("/upload-csv", methods=["POST"])
def upload_csv():
    try:
        if "file" not in request.files:
            return jsonify({"error": "No file selected"}), 400
        file = request.files["file"]
        if file.filename == "":
            return jsonify({"error": "No file selected"}), 400
        if not file.filename.lower().endswith(".csv"):
            return jsonify({"error": "Please upload a CSV file"}), 400

        # Generar ID único para el archivo
        file_id = str(uuid.uuid4())
        file_path = os.path.join(UPLOAD_FOLDER, f"{file_id}.csv")

        # Detectar codificación
        raw = file.stream.read(10000)
        encoding = chardet.detect(raw)["encoding"] or "utf-8"
        file.stream.seek(0)

        # Guardar archivo
        file.save(file_path)

        # Leer CSV
        df = pd.read_csv(file_path, encoding=encoding)
        if df.empty or len(df.columns) == 0:
            os.remove(file_path)
            return jsonify({"error": "CSV inválido o vacío"}), 400

        # Devolver file_id para usar en análisis
        info = {
            "file_id": file_id,
            "columns": df.columns.tolist(),
            "shape": df.shape,
            "dtypes": df.dtypes.astype(str).to_dict(),
            "preview": df.head(10).to_dict("records"),
            "missing_values": df.isnull().sum().to_dict(),
        }
        return jsonify(info)

    except Exception as e:
        current_app.logger.error(f"Error processing CSV: {str(e)}")
        return jsonify({"error": f"Error procesando el archivo: {str(e)}"}), 500